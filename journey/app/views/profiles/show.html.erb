<% content_for :styles do %>
  <%= stylesheet_link_tag "views/profiles/show" %>
<% end %>

<header class="navbar">
  <%= link_to t("app.name"), root_path(locale: I18n.locale), class: "navbar__brand" %>
</header>

<main class="page">
  <div class="page__container">
    <h2 class="page__title"><%= t("profiles.show.title") %></h2>

    <section class="profile">
      <div class="profile__head">
        <div class="profile__avatar">
          <div class="profile__frame">
            <% if @profile.picture.attached? %>
              <%= image_tag @profile.picture.variant(resize_to_fill: [200, 200]),
                  alt: t("profiles.show.profile_picture_alt"),
                  class: "profile__image",
                  id: "avatarImg" %>
            <% else %>
              <img src="https://i.pravatar.cc/200?img=1"
                   alt="<%= t('profiles.show.profile_picture_alt') %>"
                   class="profile__image"
                   id="avatarImg" />
            <% end %>
          </div>

          <%= form_with model: @profile, url: profile_path, method: :patch,
                        html: { multipart: true, class: "profile__form" } do |f| %>

            <%= f.file_field :picture,
                  accept: "image/*",
                  class: "profile__file",
                  id: "avatarInput",
                  style: "display:none;" %>

            <button type="button" class="profile__edit" id="editAvatar"><%= t("common.edit") %></button>

            <div class="profile__actions">
              <%= f.submit t("common.upload"), class: "btn btn--sm" %>
            </div>
          <% end %>
        </div>

        <div class="profile__meta">
          <h3 class="profile__name" id="nameDisplay"><%= current_user.name %></h3>

          <div class="profile__kv" id="details">
            <div class="profile__kv-item">
              <span class="profile__kv-label"><%= t("users.new.phone") %></span>
              <div class="profile__kv-value" data-key="phone" data-type="text">
                <%= @profile&.phone.presence || "-" %>
              </div>
            </div>

            <div class="profile__kv-item">
              <span class="profile__kv-label"><%= t("users.new.headquarters") %></span>
              <div class="profile__kv-value" data-key="headquarters" data-type="text">
                <%= @profile&.headquarters.presence || "-" %>
              </div>
            </div>

            <div class="profile__kv-item">
              <span class="profile__kv-label"><%= t("users.new.fields.email") %></span>
              <div class="profile__kv-value" data-key="email" data-type="email">
                <%= current_user.email %>
              </div>
            </div>

            <div class="profile__kv-item">
              <span class="profile__kv-label"><%= t("users.new.birthday") %></span>
              <div class="profile__kv-value" data-key="birthday" data-type="date">
                <%= @profile&.birthday %>
              </div>
            </div>
          </div>

          <div class="profile__toolbar">
            <button class="btn btn--sm" id="editBtn" type="button"><%= t("common.edit") %></button>
          </div>

          <div class="page__actions" id="saveBar" style="display:none;">
            <button class="btn btn--sm" id="cancelBtn" type="button"><%= t("common.cancel") %></button>
            <button class="btn" id="saveBtn" type="button" style="min-width:120px;"><%= t("common.save") %></button>
          </div>

        </div>
      </div>
    </section>

    <hr class="rule" />

    <section class="settings">
      <h3 class="settings__title"><%= t("profiles.show.settings_title") %></h3>

      <div class="settings__row">
        <div class="settings__label"><%= t("profiles.show.preferred_language") %></div>
        <div class="settings__control">
          <select class="input" id="langSelect">
            <option value="en" <%= "selected" if I18n.locale.to_s == "en" %>>English</option>
            <option value="de" <%= "selected" if I18n.locale.to_s == "de" %>>Deutsch</option>
          </select>
        </div>
      </div>

      <div class="settings__row">
        <div class="settings__label"><%= t("profiles.show.mode") %></div>
        <div class="settings__control">
          <div class="mode-toggle">
            <span><%= t("profiles.show.light") %></span>
            <label class="toggle">
              <input type="checkbox" id="themeToggle" />
              <span class="toggle__slider" aria-hidden="true"></span>
            </label>
            <span><%= t("profiles.show.dark") %></span>
          </div>
        </div>
      </div>
    </section>

  </div>
</main>

<script>
  const editBtn   = document.getElementById('editBtn');
  const saveBar   = document.getElementById('saveBar');
  const saveBtn   = document.getElementById('saveBtn');
  const cancelBtn = document.getElementById('cancelBtn');

  const detailsContainer = document.getElementById('details');
  const themeToggle = document.getElementById('themeToggle');

  let inputs = [];
  let originals = new Map();

  function toInput(el){
    const type = el.dataset.type || 'text';
    const key  = el.dataset.key;
    const val  = el.textContent.trim();

    const input = document.createElement('input');
    input.className = 'input';
    input.value = val;
    input.setAttribute('data-key', key);

    if(type === 'date'){ input.type = 'date'; }
    else if(type === 'email'){ input.type = 'email'; }
    else { input.type = 'text'; }

    el.replaceWith(input);
    return input;
  }

  function toDisplay(input){
    const div = document.createElement('div');
    div.className = 'profile__kv-value';
    div.dataset.key  = input.dataset.key;
    if(input.type) div.dataset.type = input.type === 'text' ? 'text' : input.type;
    div.textContent = input.value.trim();
    input.replaceWith(div);
    return div;
  }

  function enterEditMode(){
    if(inputs.length) return;
    originals.clear();
    inputs = [];

    const editable = detailsContainer.querySelectorAll('.profile__kv-value');
    editable.forEach(el=>{
      originals.set(el.dataset.key, el.textContent.trim());
      const input = toInput(el);
      inputs.push(input);
    });

    editBtn.disabled = true;
    saveBar.style.display = 'flex';
    if(inputs[0]) inputs[0].focus();
  }

  function exitEditMode(save){
    if(!inputs.length) return;
    if(save){
      inputs.forEach(inp => toDisplay(inp));
    }else{
      inputs.forEach(inp => {
        const key = inp.dataset.key;
        const disp = document.createElement('div');
        disp.className = 'profile__kv-value';
        disp.dataset.key = key;
        disp.dataset.type = inp.type === 'text' ? 'text' : inp.type;
        disp.textContent = originals.get(key) ?? '';
        inp.replaceWith(disp);
      });
    }
    inputs = [];
    editBtn.disabled = false;
    saveBar.style.display = 'none';
  }

  editBtn?.addEventListener('click', enterEditMode);
  saveBtn?.addEventListener('click', ()=>exitEditMode(true));
  cancelBtn?.addEventListener('click', ()=>exitEditMode(false));

  const THEME_KEY = 'journey-theme';
  const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;

  function applyTheme(theme){
    document.documentElement.setAttribute('data-theme', theme);
    if (themeToggle) themeToggle.checked = (theme === 'dark');
  }

  (function initTheme(){
    const stored = localStorage.getItem(THEME_KEY);
    const theme = stored || (prefersDark ? 'dark' : 'light');
    applyTheme(theme);
  })();

  themeToggle?.addEventListener('change', () => {
    const current = document.documentElement.getAttribute('data-theme') || 'dark';
    const target  = current === 'dark' ? 'light' : 'dark';
    applyTheme(target);
    localStorage.setItem(THEME_KEY, target);
  });

  const editAvatar  = document.getElementById('editAvatar');
  const avatarInput = document.getElementById('avatarInput');

  editAvatar?.addEventListener('click', (e)=>{
    e.preventDefault();
    avatarInput?.click();
  });
</script>
